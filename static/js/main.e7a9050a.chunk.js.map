{"version":3,"sources":["components/DataForm.js","components/Watch.js","App.js","reportWebVitals.js","index.js"],"names":["DataForm","props","className","onSubmit","evt","preventDefault","addWatch","value","titleValue","onChange","target","onTitleChange","required","type","timeValue","onTimeChange","getHoursDeg","hours","minutes","getMinutesDeg","seconds","getSecondsDeg","Watch","timeout","item","id","title","time","React","useState","Date","getUTCHours","Number","setHours","getUTCMinutes","setMinutes","getUTCSeconds","setSeconds","getTime","useEffect","setTimeout","clearTimeout","onClick","removeItem","handleRemoveItem","style","transform","App","setTitleValue","setTimeValue","listing","setListing","ids","setId","newItem","prevId","prevListing","map","filter","o","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a9050a.chunk.js","sourcesContent":["const DataForm = props => {\r\n\r\n  const handleTitleChange = evt => {\r\n    const {value} = evt.target;\r\n    props.onTitleChange(value);\r\n  }\r\n\r\n  const handleTimeChange = evt => {\r\n    const {value} = evt.target;\r\n    props.onTimeChange(value);\r\n  }\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    props.addWatch();\r\n  }\r\n\r\n  return (\r\n    <form className=\"DataForm\" onSubmit={handleSubmit}>\r\n      <div className=\"block\">\r\n        <div className=\"title\">\r\n          Название\r\n        </div>\r\n        <div className=\"input\">\r\n          <input value={props.titleValue} onChange={handleTitleChange} required />\r\n        </div>\r\n      </div>\r\n      <div className=\"block\">\r\n        <div className=\"title\">\r\n          Временная зона\r\n        </div>\r\n        <div className=\"input\">\r\n          <input type=\"number\" value={props.timeValue} onChange={handleTimeChange} required />\r\n        </div>\r\n      </div>\r\n      <div className=\"block\">\r\n        <div className=\"submit\">\r\n          <button>\r\n            Добавить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DataForm;","import React from \"react\";\r\n\r\nconst getHoursDeg = (hours, minutes) => {\r\n  return (hours * 30) + (minutes * 0.5);\r\n}\r\n\r\nconst getMinutesDeg = (minutes, seconds) => {\r\n  return (minutes * 6) + (seconds * 0.1);\r\n}\r\n\r\nconst getSecondsDeg = seconds => {\r\n  return (seconds * 6);\r\n}\r\n\r\nconst Watch = props => {\r\n\r\n  const {id, title, time} = props.item;\r\n\r\n  const [hours, setHours] = React.useState(new Date().getUTCHours() + Number(time));\r\n  const [minutes, setMinutes] = React.useState(new Date().getUTCMinutes());\r\n  const [seconds, setSeconds] = React.useState(new Date().getUTCSeconds());\r\n  let timeout;\r\n\r\n  const getTime = () => {\r\n    setHours(new Date().getUTCHours() + Number(time));\r\n    setMinutes(new Date().getUTCMinutes());\r\n    setSeconds(new Date().getUTCSeconds());\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getTime();\r\n    timeout = setTimeout(getTime, 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    }\r\n  });\r\n\r\n  const handleRemoveItem = id => {\r\n    props.removeItem(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Watch\">\r\n      <button onClick={() => handleRemoveItem(id)} className=\"watch_remove\">x</button>\r\n      <div className=\"watch_title\">{title}</div>\r\n      <div className=\"circle\">\r\n        <div className=\"hours\" style={{transform: `rotate(${getHoursDeg(hours, minutes)}deg)` }}></div>\r\n        <div className=\"minutes\" style={{transform: `rotate(${getMinutesDeg(minutes, seconds)}deg)`}}></div>\r\n        <div className=\"seconds\" style={{transform: `rotate(${getSecondsDeg(seconds)}deg)`}}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Watch;","import React, { useState } from 'react';\nimport './App.css';\nimport DataForm from './components/DataForm';\nimport Watch from './components/Watch';\n\nfunction App() {\n  const [titleValue, setTitleValue] = useState('');\n  const [timeValue, setTimeValue] = useState('');\n  const [listing, setListing] = useState([]);\n  const [ids, setId] = useState(1);\n\n  const handleTitleChange = value => {\n    setTitleValue(value);\n  }\n\n  const handleTimeChange = value => {\n    setTimeValue(value);\n  }\n\n  const handleAddWatch = () => {\n    const newItem = {\n      'id' : ids,\n      'title' : titleValue,\n      'time' : timeValue\n    };\n    setId(prevId => prevId + 1);\n    setListing(prevListing => [...prevListing, newItem]);\n\n    setTitleValue('');\n    setTimeValue('');\n  }\n\n  const handleRemoveItem = (id) => {\n    setListing(prevListing => prevListing.filter(o => o.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <DataForm\n        titleValue={titleValue}\n        timeValue={timeValue}\n        onTitleChange={handleTitleChange}\n        onTimeChange={handleTimeChange}\n        addWatch={handleAddWatch}\n      />\n      <div className=\"Wathes\">\n        {listing.map(item => <Watch key={item.id} item={item} removeItem={() => handleRemoveItem(item.id)} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}